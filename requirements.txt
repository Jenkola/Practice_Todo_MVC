**Requirements**

V0.01
Begin model creation:
	-DONE: It should have a place to store todos i.e. a todos array.

	-DONE: It should have a function to add todos.
		>>Todos should be objects with 2 properties: todoText and completed.
			>>Accepts as parameter: Text to be input to Todotext.
			>>Completed is false by default.

	-DONE: It should have a function to edit the todo text.
		>>Accepts as parameters 1: Index number of todo to be updated. 2: Updated todo text string.

	-DONE: It should have a function to delete a todo.
		>>Accepts as parameter: Index number of todo to be deleted.

	-DONE: It should have a function to toggle the completed status of a todo.
		>>Accepts as parameter: Index number of todo to be toggled.

	-DONE: It should have a function to display todos, for now via a console.log().
		>>It should display a string of the completed status and the todo text.
		>>The add todos, edit todo, delete todo function should also call the display todos function.

V0.02
Toggleall function in model:
	It should have a method to toggle all todos' completed status.
		>>If all todos have are completed === true, make all todos' completed === false.
		>>Otherwise, make all todos' completed === true.
		>>Call displayTodos function afterward.

V0.03
Migrate display todos to HTML:
	-DONE: The display todos function should display the todos in index.html rather than in the console.
		>>Set up UL in index.html
		>>displayTodos should create LI elements, put in same text content as before, then append to the UL.
		>>Remove console.log methods from displaytodos.

V0.04
Delete all completed function in model:
	-DONE: It should have a function to delete all completed todos.
		>>Loops through todos (from back to front?), if completed === true, call delete todo function on that index number.

V0.05
Controls in html:
	-DONE: Create controls for model functions in index.html
		>>addTodo: Text input, 'Add todo' button.
		>>editTodoText: Number input for index, text input, 'Edit todo' button.
		>>deleteTodo: Number input for index, 'Delete todo' button.
		>>toggleCompleted: Number input for index, 'Toggle Completed' button.
		>>toggleAll: 'Toggle all' button.
		>>removeCompleted: 'Remove all completed todos' button.

V0.06
Build control handler section in JS:
	-DONE: It should have methods in control object which:
		>>Are triggered by the user clicking control buttons in index.html
		>>Call model methods, utilising the value of relevant text/number fields
		as arguments to the methods.
		>>Clear the value of the text/number fields.
		>>Calls to render (displaytodos) should be moved from the model methods to the control methods.
	-DONE: The buttons in index.html should have onclick properties to utilise the control methods.


TODO:
	-Add Delete todo and Toggle Completed buttons to each todo li item in HTML.
	-Make these buttons work (each li element will need a unique id?).
	-Remove those buttons from controls section once working.

	-Make completed status a checkbox on each li item. Checkbox status to be bound to completed property of the todo in JS.
	-Make edit todo workable for each list item i.e. Double click text to edit.